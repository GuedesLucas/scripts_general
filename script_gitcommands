echo "# scripts_general" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin {git_url}
git push -u origin main

git remote update origin --prune
git checkout -b {novabranch}
git checkout master
git branch -a
git branch
git reset --merge a9fdeb5

git reset --merge HEAD~1

git add .
git commit -a -m "" -m ""
git push origin {branch}

################################################################################################
###################       GIT MERGE ON PRODUCTION FROM RELEASE VERSION       ###################
################################################################################################
git checkout release-v0.0.0
git pull
git checkout master
git pull
git merge release-v0.0.0
git add .
git tag -a 0.0.1 -m "Descrição de Topo, Titulo" -m "Mensagem de descrição de corpo, releases"
gitmoji -c
git push --tag
git push origin master
git push origin --delete release-v0.0.0
################################################################################################

git flow init

git tag -l -n50 | awk "{split(\$0,a,\"-\"); print a[1] a[2];}" > tags.txt


Rollback de branch
# Resets index to former commit; replace '56e05fced' with your commit code
git reset 56e05fced 

# Moves pointer back to previous HEAD
git reset --soft HEAD@{1}

git commit -m "Revert to 56e05fced"

# Updates working copy to reflect the new commit
git reset --hard

################################################################################################
# Starting from GitLab 10.0, repositories are hashed
# Usually Git repositories are stored in this directory
/var/opt/gitlab/git-data/repositories/

# Depending on version, GitLab uses one several storage types. Legacy storage (default for GitLab < 10.0) type uses
#{namespace}/#{project_name}.git

For example, if the project ID is “1”. So to find a hash of it run:

$ echo -n 1 | sha256sum 
6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b



##################################################################################################

# Resets index to former commit; replace '56e05fced' with your commit code
git reset 56e05fced 

# Moves pointer back to previous HEAD
git reset --soft HEAD@{1}

git checkout -b {NovaBranch}

git push origin {NovaBranch}



##################################################################################################

Comandos para forçar um commit novo para voltar os arquivos ou correções

git push -f origin release:master


##################################################################################################

Gera um token novo e setar no global para usar no terminal
git config --global credential.helper store
git config --global user.name "your name"
git config --global user.password "token gerado"
